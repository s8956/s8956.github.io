{"page":{"authors":[{"name":"Kitsune Solar","url":"https://lib.onl/ru/authors/kitsunesolar/"}],"categories":[{"name":"Linux","url":"https://lib.onl/ru/categories/linux/"}],"content":{"markdown":"","plain":""},"date":{"created":"2022-01-13T22:44:15Z","modified":"2023-10-16T22:23:00Z","published":"2022-01-13T22:44:15Z"},"description":"0J/RgNC40LLQtdGC0YHRgtCy0YPRjiEg0JIg0Y3RgtC+0Lkg0L3QtdCx0L7Qu9GM0YjQvtC5INC30LDQvNC10YLQutC1INC/0YDQuNCy0LXQtNGDINC60L7QvNCw0L3QtNGDLCDQv9GA0Lgg0L/QvtC80L7RidC4INC60L7RgtC+0YDQvtC5INC80L7QttC90L4g0LTQvtCx0LDQstC40YLRjCDRgNC10L/QvtC30LjRgtC+0YDQuNC5INGP0LTRgNCwIFhhbk1vZCDQsiBEZWJpYW4u","images":["https://images.unsplash.com/photo-1615485021362-5db597fbab1d"],"meta":{"fid":"b368e50016c8d85387e5b06640580d5a","license":"CC-BY-SA-4.0","read_time":4,"sha1":"5805c2f80e0d89e6eb99a2b2db2b6a529faaa7c2","type":"articles","uuid":"06ef2fab-2ae2-5356-9154-7ca1e486d27d","word_count":694},"tags":[{"name":"debian","url":"https://lib.onl/ru/tags/debian/"},{"name":"xanmod","url":"https://lib.onl/ru/tags/xanmod/"},{"name":"kernel","url":"https://lib.onl/ru/tags/kernel/"}],"title":"Установка ядра XanMod в Debian","url":"https://lib.onl/ru/articles/2022/01/06ef2fab-2ae2-5356-9154-7ca1e486d27d/"},"site":{"description":"Заметки на тему администрирования и разработки различных систем, приложений и серверов.","manifest":"https://lib.onl/ru/manifest.json","rss":"https://lib.onl/ru/index.xml","title":"Library Online","url":"https://lib.onl/"}}