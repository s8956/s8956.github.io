{"page":{"authors":[{"name":"Kai Kimera","url":"https://lib.onl/ru/authors/kaikimera/"}],"categories":[{"name":"Linux","url":"https://lib.onl/ru/categories/linux/"}],"content":{"markdown":"LS0tCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwojIEdlbmVyYWwgc2V0dGluZ3MuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwoKdGl0bGU6ICfQo9GB0YLQsNC90L7QstC60LAg0Y/QtNGA0LAgWGFuTW9kINCyIERlYmlhbicKZGVzY3JpcHRpb246ICcnCmltYWdlczoKICAtICdodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTYxNTQ4NTAyMTM2Mi01ZGI1OTdmYmFiMWQnCmNhdGVnb3JpZXM6CiAgLSAnbGludXgnCnRhZ3M6CiAgLSAnZGViaWFuJwogIC0gJ3hhbm1vZCcKICAtICdrZXJuZWwnCmF1dGhvcnM6CiAgLSAnS2FpS2ltZXJhJwpzb3VyY2VzOgogIC0gJ2h0dHBzOi8veGFubW9kLm9yZycKbGljZW5zZTogJ0NDLUJZLVNBLTQuMCcKY29tcGxleGl0eTogJzAnCnRvYzogMQpjb21tZW50czogMQoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCiMgRGF0ZSBzZXR0aW5ncy4KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAjCgpkYXRlOiAnMjAyMi0wMS0xNFQwMTo0NDoxNSswMzowMCcKcHVibGlzaERhdGU6ICcyMDIyLTAxLTE0VDAxOjQ0OjE1KzAzOjAwJwpleHBpcnlEYXRlOiAnJwpsYXN0TW9kOiAnMjAyMy0xMC0xN1QwMToyMzowMCswMzowMCcKCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwojIE1ldGEgc2V0dGluZ3MuCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIwoKdHlwZTogJ2FydGljbGVzJwpoYXNoOiAnMDZlZjJmYWIyYWUyNzM1NjkxNTQ3Y2ExZTQ4NmQyN2RmNjYwMTE4MycKdXVpZDogJzA2ZWYyZmFiLTJhZTItNTM1Ni05MTU0LTdjYTFlNDg2ZDI3ZCcKc2x1ZzogJzA2ZWYyZmFiLTJhZTItNTM1Ni05MTU0LTdjYTFlNDg2ZDI3ZCcKCmRyYWZ0OiAwCi0tLQoK0J/RgNC40LLQtdGC0YHRgtCy0YPRjiEg0JIg0Y3RgtC+0Lkg0L3QtdCx0L7Qu9GM0YjQvtC5INC30LDQvNC10YLQutC1INC/0YDQuNCy0LXQtNGDINC60L7QvNCw0L3QtNGDLCDQv9GA0Lgg0L/QvtC80L7RidC4INC60L7RgtC+0YDQvtC5INC80L7QttC90L4g0LTQvtCx0LDQstC40YLRjCDRgNC10L/QvtC30LjRgtC+0YDQuNC5INGP0LTRgNCwIHt7PCB0YWcgIlhhbk1vZCIgPn19INCyIHt7PCB0YWcgIkRlYmlhbiIgPn19LgoKPCEtLW1vcmUtLT4KCiMjINCn0YLQviDRgtCw0LrQvtC1INGP0LTRgNC+IFhhbk1vZD8KCtCv0LTRgNC+IHt7PCB0YWcgIlhhbk1vZCIgPn19INC40LzQtdC10YIg0YDRj9C0INC/0LDRgtGH0LXQuSDQuCDQvtC/0YLQuNC80LjQt9Cw0YbQuNC5LiDQodC/0LjRgdC+0Log0LjQt9C80LXQvdC10L3QuNC5INC/0L4g0YHRgNCw0LLQvdC10L3QuNGOINGBINCy0LDQvdC40LvRjNC90YvQvCDRj9C00YDQvtC8LCDRjyDQstC30Y/QuyDRgSBb0L7RhNC40YbQuNCw0LvRjNC90L7Qs9C+INGB0LDQudGC0LBdKGh0dHBzOi8veGFubW9kLm9yZyk6CgotIENhY2hpbmcsIFZpcnR1YWwgTWVtb3J5IE1hbmFnZXIgYW5kIENQVUZyZXEgR292ZXJub3IgaW1wcm92ZW1lbnRzLgotIEZ1bGwgbXVsdGktY29yZSBibG9jayBsYXllciBydW5xdWV1ZSByZXF1ZXN0cyBmb3IgaGlnaCBJL08gdGhyb3VnaHB1dC4KLSBCQlJ2MiBUQ1AgY29uZ2VzdGlvbiBjb250cm9sICsgRlEtUElFIHBhY2tldCBzY2hlZHVsaW5nIGFuZCBBUU0gYWxnb3JpdGhtLgotIE9SQyBVbndpbmRlciBmb3Iga2VybmVsIHN0YWNrIHRyYWNlcyAoZGVidWdpbmZvKSBpbXBsZW1lbnRhdGlvbi4KLSBIaWdoIHJlc3BvbnNpdmVuZXNzIG11bHRpdGFza2luZyBUYXNrIFR5cGUgc2NoZWR1bGVyIChTQ0hFRF9OT1JNQUwpIGJ1aWxkIGF2YWlsYWJsZSBbNS4xNS10dF0uCi0gUmVhbC10aW1lIExpbnV4IGtlcm5lbCAoUFJFRU1QVF9SVCkgYnVpbGQgYXZhaWxhYmxlIFs1LjE1LXJ0XSBbNS4xMC1ydF0uCi0gVGhpcmQtcGFydHkgcGF0Y2hzZXQgYXZhaWxhYmxlOiBwYXRjaGVzCiAgLSBsZTkncyBmaWxlIG1hcHBpbmdzIHVuZGVyIG1lbW9yeSBwcmVzc3VyZSBwcm90ZWN0aW9uLgogIC0gTGludXggUmFuZG9tIE51bWJlciBHZW5lcmF0b3IgKExSTkcpIGZyYW1ld29yay4KICAtIFRDUCBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb25zIGJhY2twb3J0IGZyb20gbGludXgvbmV0LW5leHQgWzUuMTZdIFs1LjE1XS4KICAtIEFNRCdzIFAtc3RhdGUgZHJpdmVyIGZvciBaZW4yIGFuZCBaZW4zIHByb2Nlc3NvcnMgWzUuMTZdIFs1LjE1XS4KICAtIEZ1dGV4IHdhaXR2IGFuZCBsZWdhY3kgV0FJVF9NVUxUSVBMRSBpbXBsZW1lbnRhdGlvbiBmb3IgV2luZSAvIFByb3RvbiBGc3luYyBzdXBwb3J0LgogIC0gV2luZVN5bmMgZHJpdmVyIGZvciBmYXN0IGtlcm5lbC1iYWNrZWQgV2luZSBbNS4xNl0gWzUuMTVdIFthcyBtb2R1bGU6IHdpbmVzeW5jXS4KICAtIEdvb2dsZSdzIE11bHRpZ2VuZXJhdGlvbmFsIExSVSBmcmFtZXdvcmsgWzUuMTZdIFs1LjE1XS4KICAtIEdvb2dsZSdzIEJCUnYyIFRDUCBjb25nZXN0aW9uIGNvbnRyb2wuCiAgLSBQYXJhZ29uJ3MgU29mdHdhcmUgTlRGUzMgZHJpdmVyIFthcyBtb2R1bGU6IG50ZnMzXS4KICAtIFBDSWUgQUNTIE92ZXJyaWRlIGZvciBieXBhc3NpbmcgSU9NTVUgZ3JvdXBzIHN1cHBvcnQuCiAgLSBHcmF5c2t5J3MgYWRkaXRpb25hbCBDUFUgb3B0aW1pemF0aW9ucyBmb3IgR0NDIGFuZCBDbGFuZy4KICAtIENsZWFyIExpbnV4IHBhdGNoc2V0IFtwYXJ0aWFsXS4KICAtIEFuZHJvaWQgQXNobWVtIGFuZCBCaW5kZXIgSVBDIGRyaXZlciBhcyBtb2R1bGUgZm9yIEFuYm94LgogIC0gVXBkYXRlZCBaU1REIGxpYnJhcnkgZm9yIGJ1ZyBmaXhlcyBhbmQgci93IHBlcmZvcm1hbmNlIGNvbXByZXNzaW9uIGltcHJvdmVtZW50cyBvbiBCdHJmcywgRjJGUywgU3F1YXNoRlMsIHBzdG9yZSwgaW5pdHJhbWZzIGFuZCB2bWxpbnV6LgotIEdlbmVyaWMgcGFja2FnZXMgZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBtb3N0IERlYmlhbiAmIFVidW50dSBiYXNlZCBkaXN0cmlidXRpb25zLiBCdWlsdHMgb24gdGhlIGxhdGVzdCBMTFZNIDEyLjAuMSwgR0NDIDExLjIgYW5kIEJpbnV0aWxzIDIuMzcuCi0gR1BMdjIgbGljZW5zZS4gQ2FuIGJlIGJ1aWx0IGZvciBhbnkgZGlzdHJpYnV0aW9uIG9yIHB1cnBvc2UuCgrQodGC0L7QuNGCINC30LDQvNC10YLQuNGC0YwsINGH0YLQviDRj9C00YDQviB7ezwgdGFnICJYYW5Nb2QiID59fSDQvdC1INC10LTQuNC90YHRgtCy0LXQvdC90L7QtSwg0LrQvtGC0L7RgNC+0LUg0LjQvdGC0LXQs9GA0LjRgNGD0LXRgiDQsiDRgdC10LHRjyDQvtC/0YLQuNC80LjQt9Cw0YbQuNC4LiDQldGB0YLRjCDQtdGJ0ZEg0Y/QtNGA0L4gWyoqTGlxdW9yaXgqKl0oaHR0cHM6Ly9saXF1b3JpeC5uZXQpLCDQutC+0YLQvtGA0L7QtSDQt9Cw0L3QuNC80LDQtdGC0YHRjyDQv9GA0LDQutGC0LjRh9C10YHQutC4INGC0LXQvCDQttC1INGB0LDQvNGL0LwuINCd0L4sINC/0L7RgdC80L7RgtGA0LXQsiBb0L7QsdC30L7RgCDQuCDRgtC10YHRgtGLXShodHRwczovL3d3dy5waG9yb25peC5jb20vc2Nhbi5waHA/cGFnZT1hcnRpY2xlJml0ZW09cnl6ZW41LXhhbm1vZC1saXF1b3JpeCkg0L3QsCBQaG9yb25peCfQtSwg0Y8g0YHQtNC10LvQsNC7INCy0YvQsdC+0YAg0LIg0L/QvtC70YzQt9GDIHt7PCB0YWcgIlhhbk1vZCIgPn19LgoKIyMg0KPRgdGC0LDQvdC+0LLQutCwIFhhbk1vZAoK0J7QtNC90L7RgdGC0YDQvtGH0L3QsNGPINC60L7QvNCw0L3QtNCwINC/0L4g0LTQvtCx0LDQstC70LXQvdC40Y4g0Y/QtNGA0LAge3s8IHRhZyAiWGFuTW9kIiA+fX0g0LIg0YDQtdC/0L7Qt9C40YLQvtGA0LjQuSB7ezwgdGFnICJEZWJpYW4iID59fSfQsCDQv9GA0LjQstC10LTQtdC90LAg0L3QuNC20LUuINCe0L3QsCDQtNGA0L7QsdC40YLRgdGPINC90LAg0YHQu9C10LTRg9GO0YnQuNC1INC/0L7QtC3QutC+0LzQsNC90LTRizoKCjEuINCU0L7QsdCw0LLQu9C10L3QuNC1INGE0LDQudC70LAgYHhhbm1vZC1rZXJuZWwubGlzdGAg0LIg0LTQuNGA0LXQutGC0L7RgNC40Y4gYC9ldGMvYXB0L3NvdXJjZXMubGlzdC5kYC4KMi4g0KHQutCw0YfQuNCy0LDQvdC40LUg0YTQsNC50LvQsCDQv9C+0LTQv9C40YHQuCBgYXJjaGl2ZS5rZXlgINC4INGA0LDQt9C80LXRidC10L3QuNC1INC10LPQviDQsiDQtNC40YDQtdC60YLQvtGA0LjRjiBgL2V0Yy9hcHQvdHJ1c3RlZC5ncGcuZGAg0YEg0L3QsNC30LLQsNC90LjQtdC8IGB4YW5tb2Qta2VybmVsLmdwZ2AuCjMuINCe0LHQvdC+0LLQu9C10L3QuNC1INC40L3RhNC+0YDQvNCw0YbQuNC4INC40Lcg0YDQtdC/0L7Qt9C40YLQvtGA0LjRjyDQv9GA0Lgg0L/QvtC80L7RidC4INC60L7QvNCw0L3QtNGLIGBhcHQgdXBkYXRlYC4KCmBgYHRlcm1pbmFsIHtvcz0ibGludXgifQplY2hvICdkZWIgW3NpZ25lZC1ieT0vZXRjL2FwdC90cnVzdGVkLmdwZy5kL3hhbm1vZC1rZXJuZWwuZ3BnXSBodHRwOi8vZGViLnhhbm1vZC5vcmcgcmVsZWFzZXMgbWFpbicgfCB0ZWUgL2V0Yy9hcHQvc291cmNlcy5saXN0LmQveGFubW9kLWtlcm5lbC5saXN0ICYmIGN1cmwgLWZzU0wgJ2h0dHBzOi8vZGwueGFubW9kLm9yZy9hcmNoaXZlLmtleScgfCBncGcgLS1kZWFybW9yIHwgdGVlIC9ldGMvYXB0L3RydXN0ZWQuZ3BnLmQveGFubW9kLWtlcm5lbC5ncGcgPiAvZGV2L251bGwgJiYgYXB0IHVwZGF0ZQpgYGAKCtCf0L7RgdC70LUg0LLRi9C/0L7Qu9C90LXQvdC40Y8g0LLRi9GI0LXQv9GA0LjQstC10LTRkdC90L3QvtC5INC60L7QvNCw0L3QtNGLLCDRg9GB0YLQsNC90L7QstC60LAg0Y/QtNGA0LAge3s8IHRhZyAiWGFuTW9kIiA+fX0g0L/RgNC+0LjRgdGF0L7QtNC40YIg0YLQsNC60LjQvCDQvtCx0YDQsNC30L7QvDoKCmBgYHRlcm1pbmFsIHtvcz0ibGludXgifQphcHQgaW5zdGFsbCBsaW51eC14YW5tb2QtW0FCSV0KYGBgCgrQk9C00LU6CgotIGBbQUJJXWAgLSDQstC10YDRgdC40Y8g0LDRgNGF0LjRgtC10LrRgtGD0YDRiy4g0KHQv9C40YHQvtC6INCy0LXRgNGB0LjQuSDQsNGA0YXQuNGC0LXQutGC0YPRgCDQvNC+0LbQvdC+INC/0L7RgdC80L7RgtGA0LXRgtGMINC90LjQttC1LgoKIyMjINCf0YDQuNC80LXRgNGLCgrQo9GB0YLQsNC90L7QstC40YLRjCDRj9C00YDQviB7ezwgdGFnICJYYW5Nb2QiID59fSDRgSDQstC10YDRgdC40LXQuSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLIGB4NjR2MWA6CgpgYGB0ZXJtaW5hbCB7b3M9ImxpbnV4In0KYXB0IGluc3RhbGwgbGludXgteGFubW9kLXg2NHYxCmBgYAoK0KPRgdGC0LDQvdC+0LLQuNGC0Ywg0Y/QtNGA0L4ge3s8IHRhZyAiWGFuTW9kIiA+fX0g0YEg0LLQtdGA0YHQuNC10Lkg0LDRgNGF0LjRgtC10LrRgtGD0YDRiyBgeDY0djJgOgoKYGBgdGVybWluYWwge29zPSJsaW51eCJ9CmFwdCBpbnN0YWxsIGxpbnV4LXhhbm1vZC14NjR2MgpgYGAKCtCj0YHRgtCw0L3QvtCy0LjRgtGMINGP0LTRgNC+IHt7PCB0YWcgIlhhbk1vZCIgPn19INGBINCy0LXRgNGB0LjQtdC5INCw0YDRhdC40YLQtdC60YLRg9GA0YsgYHg2NHYzYDoKCmBgYHRlcm1pbmFsIHtvcz0ibGludXgifQphcHQgaW5zdGFsbCBsaW51eC14YW5tb2QteDY0djMKYGBgCgrQo9GB0YLQsNC90L7QstC40YLRjCDRj9C00YDQviB7ezwgdGFnICJYYW5Nb2QiID59fSDRgSDQstC10YDRgdC40LXQuSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLIGB4NjR2NGA6CgpgYGB0ZXJtaW5hbCB7b3M9ImxpbnV4In0KYXB0IGluc3RhbGwgbGludXgteGFubW9kLXg2NHY0CmBgYAoK0JTQu9GPINGD0YHRgtCw0L3QvtCy0LrQuCBNYWlubGluZS3QstC10YDRgdC40Lgg0Y/QtNGA0LAg0LrQvtC80LDQvdC00LAg0LHRg9C00LXRgiDRgtCw0LrQvtC5OgoKYGBgdGVybWluYWwge29zPSJsaW51eCJ9CmFwdCBpbnN0YWxsIGxpbnV4LXhhbm1vZC1lZGdlLXg2NHYzCmBgYAoKIyMg0JLQtdGA0YHQuNC4INCw0YDRhdC40YLQtdC60YLRg9GAIFhhbk1vZAoK0JLQtdGA0YHQuNGPINCw0YDRhdC40YLQtdC60YLRg9GA0Ysg0LfQsNCy0LjRgdC40YIg0L7RgiDRj9C00YDQsCDQv9GA0L7RhtC10YHRgdC+0YDQsCDQuCDQv9C+0LTQtNC10YDQttC40LLQsNC10LzRi9GFINC40Lwg0LjQvdGB0YLRgNGD0LrRhtC40LkuINCS0LXRgNGB0LjRjiDQsNGA0YXQuNGC0LXQutGC0YPRgNGLINC80L7QttC90L4g0YPQt9C90LDRgtGMINC40Lcg0YHQv9C40YHQutCwINC90LjQttC1LgoKIyMjIHg4Ni02NCAoTEVHQUNZKQoK0KHRg9GE0YTQuNC60YEg0LTQu9GPINGD0YHRgtCw0L3QvtCy0LrQuCDRj9C00YDQsDogYHg2NHYxYC4KCioq0J/QvtC00LTQtdGA0LbQuNCy0LDQtdC80YvQtSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLOioqCgotIEFNRCBLOC1mYW1pbHkKLSBBTUQgSzEwLWZhbWlseQotIEFNRCBGYW1pbHkgMTBoIChCYXJjZWxvbmEpCi0gSW50ZWwgUGVudGl1bSA0IC8gWGVvbiAoTm9jb25hKQotIEludGVsIENvcmUgMiAoYWxsIHZhcmlhbnRzKQotIEFsbCB4ODYtNjQgQ1BVcwoKIyMjIHg4Ni02NC12MgoK0KHRg9GE0YTQuNC60YEg0LTQu9GPINGD0YHRgtCw0L3QvtCy0LrQuCDRj9C00YDQsDogYHg2NHYyYC4KCioq0J/QvtC00LTQtdGA0LbQuNCy0LDQtdC80YvQtSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLOioqCgotIEFNRCBGYW1pbHkgMTRoIChCb2JjYXQpCi0gQU1EIEZhbWlseSAxNmggKEphZ3VhcikKLSBBTUQgRmFtaWx5IDE1aCAoQnVsbGRvemVyKQotIEFNRCBGYW1pbHkgMTVoIChQaWxlZHJpdmVyKQotIEFNRCBGYW1pbHkgMTVoIChTdGVhbXJvbGxlcikKLSBJbnRlbCAxc3QgR2VuIENvcmUgKE5laGFsZW0pCi0gSW50ZWwgMS41IEdlbiBDb3JlIChXZXN0bWVyZSkKLSBJbnRlbCAybmQgR2VuIENvcmUgKFNhbmR5YnJpZGdlKQotIEludGVsIDNyZCBHZW4gQ29yZSAoSXZ5YnJpZGdlKQotIEludGVsIGxvdy1wb3dlciBTaWx2ZXJtb250Ci0gSW50ZWwgR29sZG1vbnQgKEFwb2xsbyBMYWtlKQotIEludGVsIEdvbGRtb250IChEZW52ZXJ0b24pCi0gSW50ZWwgR29sZG1vbnQgUGx1cyAoR2VtaW5pIExha2UpCgojIyMgeDg2LTY0LXYzCgrQodGD0YTRhNC40LrRgSDQtNC70Y8g0YPRgdGC0LDQvdC+0LLQutC4INGP0LTRgNCwOiBgeDY0djNgLgoKKirQn9C+0LTQtNC10YDQttC40LLQsNC10LzRi9C1INCw0YDRhdC40YLQtdC60YLRg9GA0Ys6KioKCi0gQU1EIEZhbWlseSAxNWggKEV4Y2F2YXRvcikKLSBBTUQgRmFtaWx5IDE3aCAoWmVuKQotIEFNRCBGYW1pbHkgMTdoIChaZW4rKQotIEFNRCBGYW1pbHkgMTdoIChaZW4yKQotIEFNRCBGYW1pbHkgMTloIChaZW4zKQotIEludGVsIDR0aCBHZW4gQ29yZSAoSGFzd2VsbCkKLSBJbnRlbCA1dGggR2VuIENvcmUgKEJyb2Fkd2VsbCkKLSBJbnRlbCA2dGggR2VuIENvcmUgKFNreWxha2UpCi0gSW50ZWwgN3RoIEdlbiBDb3JlIChLYWJ5IExha2UpCi0gSW50ZWwgOC85dGggR2VuIENvcmUgKENvZmZlZSBMYWtlKQotIEludGVsIDEwdGggR2VuIENvcmUgKENvbWV0IExha2UpCi0gSW50ZWwgMTJ0aCBHZW4gKEFsZGVyIExha2UpCi0gSW50ZWwgMTN0aCBHZW4gKFJhcHRvciBMYWtlKQotIEludGVsIDE0dGggR2VuIChNZXRlb3IgTGFrZSkKCiMjIyB4ODYtNjQtdjQgKEFWWC01MTIpCgrQodGD0YTRhNC40LrRgSDQtNC70Y8g0YPRgdGC0LDQvdC+0LLQutC4INGP0LTRgNCwOiBgeDY0djRgLgoKKirQn9C+0LTQtNC10YDQttC40LLQsNC10LzRi9C1INCw0YDRhdC40YLQtdC60YLRg9GA0Ys6KioKCi0gQU1EIEZhbWlseSAxOWggKFplbjQpCi0gSW50ZWwgNnRoIEdlbiBDb3JlIChTa3lsYWtlIFgpCi0gSW50ZWwgOHRoIEdlbiBDb3JlIGkzIChDYW5ub24gTGFrZSkKLSBJbnRlbCBYZW9uIC8gMTB0aCBHZW4gQ29yZSAoSWNlIExha2UpCi0gSW50ZWwgWGVvbiAoQ2FzY2FkZSBMYWtlKQotIEludGVsIFhlb24gKENvb3BlciBMYWtlKQotIEludGVsIDNyZCBHZW4gMTBubSsrIChUaWdlciBMYWtlKQotIEludGVsIDR0aCBHZW4gMTBubSsrIChTYXBwaGlyZSBSYXBpZHMpCi0gSW50ZWwgNXRoIEdlbiAxMG5tKysgKEVtZXJhbGQgUmFwaWRzKQotIEludGVsIDExdGggR2VuIChSb2NrZXQgTGFrZSk=","plain":""},"date":{"created":"2022-01-13T22:44:15Z","modified":"2023-10-16T22:23:00Z","published":"2022-01-13T22:44:15Z"},"description":"0J/RgNC40LLQtdGC0YHRgtCy0YPRjiEg0JIg0Y3RgtC+0Lkg0L3QtdCx0L7Qu9GM0YjQvtC5INC30LDQvNC10YLQutC1INC/0YDQuNCy0LXQtNGDINC60L7QvNCw0L3QtNGDLCDQv9GA0Lgg0L/QvtC80L7RidC4INC60L7RgtC+0YDQvtC5INC80L7QttC90L4g0LTQvtCx0LDQstC40YLRjCDRgNC10L/QvtC30LjRgtC+0YDQuNC5INGP0LTRgNCwICNYYW5Nb2Qg0LIgI0RlYmlhbi4=","images":["https://images.unsplash.com/photo-1615485021362-5db597fbab1d"],"meta":{"fid":"b368e50016c8d85387e5b06640580d5a","license":"CC-BY-SA-4.0","read_time":4,"sha1":"ac174281f7e6dc0a982bac7f2d22c4f38c41c982","type":"articles","uuid":"06ef2fab-2ae2-5356-9154-7ca1e486d27d","word_count":694},"tags":[{"name":"debian","url":"https://lib.onl/ru/tags/debian/"},{"name":"xanmod","url":"https://lib.onl/ru/tags/xanmod/"},{"name":"kernel","url":"https://lib.onl/ru/tags/kernel/"}],"title":"Установка ядра XanMod в Debian","url":"https://lib.onl/ru/articles/2022/01/06ef2fab-2ae2-5356-9154-7ca1e486d27d/"},"site":{"description":"Заметки на тему администрирования и разработки различных систем, приложений и серверов.","manifest":"https://lib.onl/ru/manifest.json","rss":"https://lib.onl/ru/index.xml","title":"Library Online","url":"https://lib.onl/"}}