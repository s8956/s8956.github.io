{"page":{"authors":[{"name":"Kitsune Solar","url":"https://lib.onl/ru/authors/kitsunesolar/"}],"categories":[{"name":"Linux","url":"https://lib.onl/ru/categories/linux/"}],"content":{"markdown":"","plain":"0J/RgNC40LLQtdGC0YHRgtCy0YPRjiEg0JIg0Y3RgtC+0Lkg0L3QtdCx0L7Qu9GM0YjQvtC5INC30LDQvNC10YLQutC1INC/0YDQuNCy0LXQtNGDINC60L7QvNCw0L3QtNGDLCDQv9GA0Lgg0L/QvtC80L7RidC4INC60L7RgtC+0YDQvtC5INC80L7QttC90L4g0LTQvtCx0LDQstC40YLRjCDRgNC10L/QvtC30LjRgtC+0YDQuNC5INGP0LTRgNCwIFhhbk1vZCDQsiBEZWJpYW4uCtCn0YLQviDRgtCw0LrQvtC1INGP0LTRgNC+IFhhbk1vZD8g0K/QtNGA0L4gWGFuTW9kINC40LzQtdC10YIg0YDRj9C0INC/0LDRgtGH0LXQuSDQuCDQvtC/0YLQuNC80LjQt9Cw0YbQuNC5LiDQodC/0LjRgdC+0Log0LjQt9C80LXQvdC10L3QuNC5INC/0L4g0YHRgNCw0LLQvdC10L3QuNGOINGBINCy0LDQvdC40LvRjNC90YvQvCDRj9C00YDQvtC8LCDRjyDQstC30Y/QuyDRgSDQvtGE0LjRhtC40LDQu9GM0L3QvtCz0L4g0YHQsNC50YLQsDoKQ2FjaGluZywgVmlydHVhbCBNZW1vcnkgTWFuYWdlciBhbmQgQ1BVRnJlcSBHb3Zlcm5vciBpbXByb3ZlbWVudHMuIEZ1bGwgbXVsdGktY29yZSBibG9jayBsYXllciBydW5xdWV1ZSByZXF1ZXN0cyBmb3IgaGlnaCBJL08gdGhyb3VnaHB1dC4gQkJSdjIgVENQIGNvbmdlc3Rpb24gY29udHJvbCArIEZRLVBJRSBwYWNrZXQgc2NoZWR1bGluZyBhbmQgQVFNIGFsZ29yaXRobS4gT1JDIFVud2luZGVyIGZvciBrZXJuZWwgc3RhY2sgdHJhY2VzIChkZWJ1Z2luZm8pIGltcGxlbWVudGF0aW9uLiBIaWdoIHJlc3BvbnNpdmVuZXNzIG11bHRpdGFza2luZyBUYXNrIFR5cGUgc2NoZWR1bGVyIChTQ0hFRF9OT1JNQUwpIGJ1aWxkIGF2YWlsYWJsZSBbNS4xNS10dF0uIFJlYWwtdGltZSBMaW51eCBrZXJuZWwgKFBSRUVNUFRfUlQpIGJ1aWxkIGF2YWlsYWJsZSBbNS4xNS1ydF0gWzUuMTAtcnRdLiBUaGlyZC1wYXJ0eSBwYXRjaHNldCBhdmFpbGFibGU6IHBhdGNoZXMgbGU5JnJzcXVvO3MgZmlsZSBtYXBwaW5ncyB1bmRlciBtZW1vcnkgcHJlc3N1cmUgcHJvdGVjdGlvbi4gTGludXggUmFuZG9tIE51bWJlciBHZW5lcmF0b3IgKExSTkcpIGZyYW1ld29yay4gVENQIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbnMgYmFja3BvcnQgZnJvbSBsaW51eC9uZXQtbmV4dCBbNS4xNl0gWzUuMTVdLiBBTUQmcnNxdW87cyBQLXN0YXRlIGRyaXZlciBmb3IgWmVuMiBhbmQgWmVuMyBwcm9jZXNzb3JzIFs1LjE2XSBbNS4xNV0uIEZ1dGV4IHdhaXR2IGFuZCBsZWdhY3kgV0FJVF9NVUxUSVBMRSBpbXBsZW1lbnRhdGlvbiBmb3IgV2luZSAvIFByb3RvbiBGc3luYyBzdXBwb3J0LiBXaW5lU3luYyBkcml2ZXIgZm9yIGZhc3Qga2VybmVsLWJhY2tlZCBXaW5lIFs1LjE2XSBbNS4xNV0gW2FzIG1vZHVsZTogd2luZXN5bmNdLiBHb29nbGUmcnNxdW87cyBNdWx0aWdlbmVyYXRpb25hbCBMUlUgZnJhbWV3b3JrIFs1LjE2XSBbNS4xNV0uIEdvb2dsZSZyc3F1bztzIEJCUnYyIFRDUCBjb25nZXN0aW9uIGNvbnRyb2wuIFBhcmFnb24mcnNxdW87cyBTb2Z0d2FyZSBOVEZTMyBkcml2ZXIgW2FzIG1vZHVsZTogbnRmczNdLiBQQ0llIEFDUyBPdmVycmlkZSBmb3IgYnlwYXNzaW5nIElPTU1VIGdyb3VwcyBzdXBwb3J0LiBHcmF5c2t5JnJzcXVvO3MgYWRkaXRpb25hbCBDUFUgb3B0aW1pemF0aW9ucyBmb3IgR0NDIGFuZCBDbGFuZy4gQ2xlYXIgTGludXggcGF0Y2hzZXQgW3BhcnRpYWxdLiBBbmRyb2lkIEFzaG1lbSBhbmQgQmluZGVyIElQQyBkcml2ZXIgYXMgbW9kdWxlIGZvciBBbmJveC4gVXBkYXRlZCBaU1REIGxpYnJhcnkgZm9yIGJ1ZyBmaXhlcyBhbmQgci93IHBlcmZvcm1hbmNlIGNvbXByZXNzaW9uIGltcHJvdmVtZW50cyBvbiBCdHJmcywgRjJGUywgU3F1YXNoRlMsIHBzdG9yZSwgaW5pdHJhbWZzIGFuZCB2bWxpbnV6LiBHZW5lcmljIHBhY2thZ2VzIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbW9zdCBEZWJpYW4gJmFtcDsgVWJ1bnR1IGJhc2VkIGRpc3RyaWJ1dGlvbnMuIEJ1aWx0cyBvbiB0aGUgbGF0ZXN0IExMVk0gMTIuMC4xLCBHQ0MgMTEuMiBhbmQgQmludXRpbHMgMi4zNy4gR1BMdjIgbGljZW5zZS4gQ2FuIGJlIGJ1aWx0IGZvciBhbnkgZGlzdHJpYnV0aW9uIG9yIHB1cnBvc2UuINCh0YLQvtC40YIg0LfQsNC80LXRgtC40YLRjCwg0YfRgtC+INGP0LTRgNC+IFhhbk1vZCDQvdC1INC10LTQuNC90YHRgtCy0LXQvdC90L7QtSwg0LrQvtGC0L7RgNC+0LUg0LjQvdGC0LXQs9GA0LjRgNGD0LXRgiDQsiDRgdC10LHRjyDQvtC/0YLQuNC80LjQt9Cw0YbQuNC4LiDQldGB0YLRjCDQtdGJ0ZEg0Y/QtNGA0L4gTGlxdW9yaXgsINC60L7RgtC+0YDQvtC1INC30LDQvdC40LzQsNC10YLRgdGPINC/0YDQsNC60YLQuNGH0LXRgdC60Lgg0YLQtdC8INC20LUg0YHQsNC80YvQvC4g0J3Qviwg0L/QvtGB0LzQvtGC0YDQtdCyINC+0LHQt9C+0YAg0Lgg0YLQtdGB0YLRiyDQvdCwIFBob3Jvbml4JnJzcXVvO9C1LCDRjyDRgdC00LXQu9Cw0Lsg0LLRi9Cx0L7RgCDQsiDQv9C+0LvRjNC30YMgWGFuTW9kLgrQo9GB0YLQsNC90L7QstC60LAgWGFuTW9kINCe0LTQvdC+0YHRgtGA0L7Rh9C90LDRjyDQutC+0LzQsNC90LTQsCDQv9C+INC00L7QsdCw0LLQu9C10L3QuNGOINGP0LTRgNCwIFhhbk1vZCDQsiDRgNC10L/QvtC30LjRgtC+0YDQuNC5IERlYmlhbiZyc3F1bzvQsCDQv9GA0LjQstC10LTQtdC90LAg0L3QuNC20LUuINCe0L3QsCDQtNGA0L7QsdC40YLRgdGPINC90LAg0YHQu9C10LTRg9GO0YnQuNC1INC/0L7QtC3QutC+0LzQsNC90LTRizoK0JTQvtCx0LDQstC70LXQvdC40LUg0YTQsNC50LvQsCB4YW5tb2Qta2VybmVsLmxpc3Qg0LIg0LTQuNGA0LXQutGC0L7RgNC40Y4gL2V0Yy9hcHQvc291cmNlcy5saXN0LmQuINCh0LrQsNGH0LjQstCw0L3QuNC1INGE0LDQudC70LAg0L/QvtC00L/QuNGB0LggYXJjaGl2ZS5rZXkg0Lgg0YDQsNC30LzQtdGJ0LXQvdC40LUg0LXQs9C+INCyINC00LjRgNC10LrRgtC+0YDQuNGOIC9ldGMvYXB0L3RydXN0ZWQuZ3BnLmQg0YEg0L3QsNC30LLQsNC90LjQtdC8IHhhbm1vZC1rZXJuZWwuZ3BnLiDQntCx0L3QvtCy0LvQtdC90LjQtSDQuNC90YTQvtGA0LzQsNGG0LjQuCDQuNC3INGA0LXQv9C+0LfQuNGC0L7RgNC40Y8g0L/RgNC4INC/0L7QvNC+0YnQuCDQutC+0LzQsNC90LTRiyBhcHQgdXBkYXRlLiBlY2hvICYjMzk7ZGViIFtzaWduZWQtYnk9L2V0Yy9hcHQvdHJ1c3RlZC5ncGcuZC94YW5tb2Qta2VybmVsLmdwZ10gaHR0cDovL2RlYi54YW5tb2Qub3JnIHJlbGVhc2VzIG1haW4mIzM5OyB8IHRlZSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC94YW5tb2Qta2VybmVsLmxpc3QgJmFtcDsmYW1wOyBjdXJsIC1mc1NMICYjMzk7aHR0cHM6Ly9kbC54YW5tb2Qub3JnL2FyY2hpdmUua2V5JiMzOTsgfCBncGcgLS1kZWFybW9yIHwgdGVlIC9ldGMvYXB0L3RydXN0ZWQuZ3BnLmQveGFubW9kLWtlcm5lbC5ncGcgJmd0OyAvZGV2L251bGwgJmFtcDsmYW1wOyBhcHQgdXBkYXRlINCf0L7RgdC70LUg0LLRi9C/0L7Qu9C90LXQvdC40Y8g0LLRi9GI0LXQv9GA0LjQstC10LTRkdC90L3QvtC5INC60L7QvNCw0L3QtNGLLCDRg9GB0YLQsNC90L7QstC60LAg0Y/QtNGA0LAgWGFuTW9kINC/0YDQvtC40YHRhdC+0LTQuNGCINGC0LDQutC40Lwg0L7QsdGA0LDQt9C+0Lw6CmFwdCBpbnN0YWxsIGxpbnV4LXhhbm1vZC1bQUJJXSDQk9C00LU6CltBQkldIC0g0LLQtdGA0YHQuNGPINCw0YDRhdC40YLQtdC60YLRg9GA0YsuINCh0L/QuNGB0L7QuiDQstC10YDRgdC40Lkg0LDRgNGF0LjRgtC10LrRgtGD0YAg0LzQvtC20L3QviDQv9C+0YHQvNC+0YLRgNC10YLRjCDQvdC40LbQtS4g0J/RgNC40LzQtdGA0Ysg0KPRgdGC0LDQvdC+0LLQuNGC0Ywg0Y/QtNGA0L4gWGFuTW9kINGBINCy0LXRgNGB0LjQtdC5INCw0YDRhdC40YLQtdC60YLRg9GA0YsgeDY0djE6CmFwdCBpbnN0YWxsIGxpbnV4LXhhbm1vZC14NjR2MSDQo9GB0YLQsNC90L7QstC40YLRjCDRj9C00YDQviBYYW5Nb2Qg0YEg0LLQtdGA0YHQuNC10Lkg0LDRgNGF0LjRgtC10LrRgtGD0YDRiyB4NjR2MjoKYXB0IGluc3RhbGwgbGludXgteGFubW9kLXg2NHYyINCj0YHRgtCw0L3QvtCy0LjRgtGMINGP0LTRgNC+IFhhbk1vZCDRgSDQstC10YDRgdC40LXQuSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLIHg2NHYzOgphcHQgaW5zdGFsbCBsaW51eC14YW5tb2QteDY0djMg0KPRgdGC0LDQvdC+0LLQuNGC0Ywg0Y/QtNGA0L4gWGFuTW9kINGBINCy0LXRgNGB0LjQtdC5INCw0YDRhdC40YLQtdC60YLRg9GA0YsgeDY0djQ6CmFwdCBpbnN0YWxsIGxpbnV4LXhhbm1vZC14NjR2NCDQlNC70Y8g0YPRgdGC0LDQvdC+0LLQutC4IE1haW5saW5lLdCy0LXRgNGB0LjQuCDRj9C00YDQsCDQutC+0LzQsNC90LTQsCDQsdGD0LTQtdGCINGC0LDQutC+0Lk6CmFwdCBpbnN0YWxsIGxpbnV4LXhhbm1vZC1lZGdlLXg2NHYzINCS0LXRgNGB0LjQuCDQsNGA0YXQuNGC0LXQutGC0YPRgCBYYW5Nb2Qg0JLQtdGA0YHQuNGPINCw0YDRhdC40YLQtdC60YLRg9GA0Ysg0LfQsNCy0LjRgdC40YIg0L7RgiDRj9C00YDQsCDQv9GA0L7RhtC10YHRgdC+0YDQsCDQuCDQv9C+0LTQtNC10YDQttC40LLQsNC10LzRi9GFINC40Lwg0LjQvdGB0YLRgNGD0LrRhtC40LkuINCS0LXRgNGB0LjRjiDQsNGA0YXQuNGC0LXQutGC0YPRgNGLINC80L7QttC90L4g0YPQt9C90LDRgtGMINC40Lcg0YHQv9C40YHQutCwINC90LjQttC1Lgp4ODYtNjQgKExFR0FDWSkg0KHRg9GE0YTQuNC60YEg0LTQu9GPINGD0YHRgtCw0L3QvtCy0LrQuCDRj9C00YDQsDogeDY0djEuCtCf0L7QtNC00LXRgNC20LjQstCw0LXQvNGL0LUg0LDRgNGF0LjRgtC10LrRgtGD0YDRizoKQU1EIEs4LWZhbWlseSBBTUQgSzEwLWZhbWlseSBBTUQgRmFtaWx5IDEwaCAoQmFyY2Vsb25hKSBJbnRlbCBQZW50aXVtIDQgLyBYZW9uIChOb2NvbmEpIEludGVsIENvcmUgMiAoYWxsIHZhcmlhbnRzKSBBbGwgeDg2LTY0IENQVXMgeDg2LTY0LXYyINCh0YPRhNGE0LjQutGBINC00LvRjyDRg9GB0YLQsNC90L7QstC60Lgg0Y/QtNGA0LA6IHg2NHYyLgrQn9C+0LTQtNC10YDQttC40LLQsNC10LzRi9C1INCw0YDRhdC40YLQtdC60YLRg9GA0Ys6CkFNRCBGYW1pbHkgMTRoIChCb2JjYXQpIEFNRCBGYW1pbHkgMTZoIChKYWd1YXIpIEFNRCBGYW1pbHkgMTVoIChCdWxsZG96ZXIpIEFNRCBGYW1pbHkgMTVoIChQaWxlZHJpdmVyKSBBTUQgRmFtaWx5IDE1aCAoU3RlYW1yb2xsZXIpIEludGVsIDFzdCBHZW4gQ29yZSAoTmVoYWxlbSkgSW50ZWwgMS41IEdlbiBDb3JlIChXZXN0bWVyZSkgSW50ZWwgMm5kIEdlbiBDb3JlIChTYW5keWJyaWRnZSkgSW50ZWwgM3JkIEdlbiBDb3JlIChJdnlicmlkZ2UpIEludGVsIGxvdy1wb3dlciBTaWx2ZXJtb250IEludGVsIEdvbGRtb250IChBcG9sbG8gTGFrZSkgSW50ZWwgR29sZG1vbnQgKERlbnZlcnRvbikgSW50ZWwgR29sZG1vbnQgUGx1cyAoR2VtaW5pIExha2UpIHg4Ni02NC12MyDQodGD0YTRhNC40LrRgSDQtNC70Y8g0YPRgdGC0LDQvdC+0LLQutC4INGP0LTRgNCwOiB4NjR2My4K0J/QvtC00LTQtdGA0LbQuNCy0LDQtdC80YvQtSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLOgpBTUQgRmFtaWx5IDE1aCAoRXhjYXZhdG9yKSBBTUQgRmFtaWx5IDE3aCAoWmVuKSBBTUQgRmFtaWx5IDE3aCAoWmVuKykgQU1EIEZhbWlseSAxN2ggKFplbjIpIEFNRCBGYW1pbHkgMTloIChaZW4zKSBJbnRlbCA0dGggR2VuIENvcmUgKEhhc3dlbGwpIEludGVsIDV0aCBHZW4gQ29yZSAoQnJvYWR3ZWxsKSBJbnRlbCA2dGggR2VuIENvcmUgKFNreWxha2UpIEludGVsIDd0aCBHZW4gQ29yZSAoS2FieSBMYWtlKSBJbnRlbCA4Lzl0aCBHZW4gQ29yZSAoQ29mZmVlIExha2UpIEludGVsIDEwdGggR2VuIENvcmUgKENvbWV0IExha2UpIEludGVsIDEydGggR2VuIChBbGRlciBMYWtlKSBJbnRlbCAxM3RoIEdlbiAoUmFwdG9yIExha2UpIEludGVsIDE0dGggR2VuIChNZXRlb3IgTGFrZSkgeDg2LTY0LXY0IChBVlgtNTEyKSDQodGD0YTRhNC40LrRgSDQtNC70Y8g0YPRgdGC0LDQvdC+0LLQutC4INGP0LTRgNCwOiB4NjR2NC4K0J/QvtC00LTQtdGA0LbQuNCy0LDQtdC80YvQtSDQsNGA0YXQuNGC0LXQutGC0YPRgNGLOgpBTUQgRmFtaWx5IDE5aCAoWmVuNCkgSW50ZWwgNnRoIEdlbiBDb3JlIChTa3lsYWtlIFgpIEludGVsIDh0aCBHZW4gQ29yZSBpMyAoQ2Fubm9uIExha2UpIEludGVsIFhlb24gLyAxMHRoIEdlbiBDb3JlIChJY2UgTGFrZSkgSW50ZWwgWGVvbiAoQ2FzY2FkZSBMYWtlKSBJbnRlbCBYZW9uIChDb29wZXIgTGFrZSkgSW50ZWwgM3JkIEdlbiAxMG5tKysgKFRpZ2VyIExha2UpIEludGVsIDR0aCBHZW4gMTBubSsrIChTYXBwaGlyZSBSYXBpZHMpIEludGVsIDV0aCBHZW4gMTBubSsrIChFbWVyYWxkIFJhcGlkcykgSW50ZWwgMTF0aCBHZW4gKFJvY2tldCBMYWtlKSA="},"date":{"created":"2022-01-13T22:44:15Z","modified":"2023-10-16T22:23:00Z","published":"2022-01-13T22:44:15Z"},"description":"0J/RgNC40LLQtdGC0YHRgtCy0YPRjiEg0JIg0Y3RgtC+0Lkg0L3QtdCx0L7Qu9GM0YjQvtC5INC30LDQvNC10YLQutC1INC/0YDQuNCy0LXQtNGDINC60L7QvNCw0L3QtNGDLCDQv9GA0Lgg0L/QvtC80L7RidC4INC60L7RgtC+0YDQvtC5INC80L7QttC90L4g0LTQvtCx0LDQstC40YLRjCDRgNC10L/QvtC30LjRgtC+0YDQuNC5INGP0LTRgNCwIFhhbk1vZCDQsiBEZWJpYW4u","images":["https://images.unsplash.com/photo-1615485021362-5db597fbab1d"],"meta":{"fid":"f2cc73ac7bed8fcc9cd6ed00efdbf6a2","license":"CC-BY-SA-4.0","read_time":4,"sha1":"e6bb3b6b2528aa1a224c08b4e114d785d8cf1048","type":"posts","uuid":"06ef2fab-2ae2-5356-9154-7ca1e486d27d","word_count":687},"tags":[{"name":"debian","url":"https://lib.onl/ru/tags/debian/"},{"name":"xanmod","url":"https://lib.onl/ru/tags/xanmod/"},{"name":"kernel","url":"https://lib.onl/ru/tags/kernel/"}],"title":"Установка ядра XanMod в Debian","url":"https://lib.onl/ru/posts/2022/01/06ef2fab-2ae2-5356-9154-7ca1e486d27d/"},"site":{"description":"Заметки на тему администрирования и разработки различных систем, приложений и серверов.","manifest":"https://lib.onl/ru/manifest.json","rss":"https://lib.onl/ru/index.xml","title":"Library Online","url":"https://lib.onl/"}}